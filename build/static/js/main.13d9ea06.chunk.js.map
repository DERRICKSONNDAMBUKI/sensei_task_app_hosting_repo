{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","fontWeight","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","taskData","json","deleteTask","method","filter","addTask","console","log","headers","body","JSON","stringify","data","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13d9ea06.chunk.js","sourcesContent":["const Button = ({ color, text ,onClick}) => {\n\n  return (\n    <button\n      className=\"btn\"\n      style={{ backgroundColor: color }}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <div>\n      <header className=\"header\">\n        <h1 style={{ color: \"green\" }}>{title}</h1>\n        <Button\n          color={showAdd?'red':'green'}\n          text={showAdd ? \"Close\" : \"Add\"}\n          onClick={onAdd}\n        />\n      </header>\n    </div>\n  );\n};\n\n// Header.defaultProps={\n//     title:'Sensei React'\n// }\n\nexport default Header;\n","import React from \"react\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n      <h3>\n        {task.text}\n        <button\n          style={{ color: \"red\", cursor: \"pointer\",fontWeight:'bolder' }}\n          onClick={() => onDelete(task.id)}\n        >\n          x\n        </button>\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import React, { useState } from \"react\";\n\nconst AddTask = ({onAdd}) => {\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add a task\");\n      return;\n    }\n    onAdd({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          value={reminder}\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","// import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport React, { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // fetch Tasks\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const taskData = res.json();\n    // console.log(taskData);\n    return taskData;\n  };\n  // delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((tasks) => tasks.id !== id));\n  };\n  // toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  // Add Task\n  const addTask = async (task) => {\n    console.log(task);\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n  return (\n    // <div className=\"App\">\n    //   <Header title='Sensei React'/>\n    // </div>\n    <div className=\"container\">\n      <Header\n        title=\"Sensei React\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        <h3>No Task!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals(console.log());\n"],"sourceRoot":""}